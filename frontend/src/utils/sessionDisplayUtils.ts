/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Å—Å–∏—è—Ö –Ω–∞–±–æ—Ä–∞
 */

export interface ModeDisplay {
  label: string;
  color: string;
  icon: string;
}

export interface LanguageDisplay {
  label: string;
  flag: string;
  color: string;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –Ω–∞–±–æ—Ä–∞
 */
export const getModeDisplay = (mode: string | null): ModeDisplay => {
  const modes: Record<string, ModeDisplay> = {
    words: {
      label: "–°–ª–æ–≤–∞",
      color: "blue.500",
      icon: "üìù",
    },
    sentences: {
      label: "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
      color: "teal.500",
      icon: "üìú",
    },
    time: {
      label: "–í—Ä–µ–º—è",
      color: "green.500",
      icon: "‚è±Ô∏è",
    },
    quote: {
      label: "–¶–∏—Ç–∞—Ç–∞",
      color: "purple.500",
      icon: "üí¨",
    },
    zen: {
      label: "–î–∑–µ–Ω",
      color: "orange.500",
      icon: "üßò",
    },
  };

  return (
    modes[mode || ""] || {
      label: mode || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
      color: "gray.500",
      icon: "‚ùì",
    }
  );
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —è–∑—ã–∫–∞
 */
export const getLanguageDisplay = (
  language: string | null
): LanguageDisplay => {
  const languages: Record<string, LanguageDisplay> = {
    ru: {
      label: "–†—É—Å—Å–∫–∏–π",
      flag: "üá∑üá∫",
      color: "red.500",
    },
    en: {
      label: "English",
      flag: "üá∫üá∏",
      color: "blue.500",
    },
    de: {
      label: "Deutsch",
      flag: "üá©üá™",
      color: "yellow.600",
    },
    fr: {
      label: "Fran√ßais",
      flag: "üá´üá∑",
      color: "blue.400",
    },
    es: {
      label: "Espa√±ol",
      flag: "üá™üá∏",
      color: "red.400",
    },
    it: {
      label: "Italiano",
      flag: "üáÆüáπ",
      color: "green.500",
    },
  };

  return (
    languages[language || ""] || {
      label: language || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
      flag: "üåê",
      color: "gray.500",
    }
  );
};

export interface TestTypeDisplay {
  label: string;
  icon: string;
  color: string;
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∫—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∏–ø–∞ —Ç–µ—Å—Ç–∞
 */
export const getTestTypeDisplay = (
  testType: string | null
): TestTypeDisplay => {
  const testTypes: Record<string, TestTypeDisplay> = {
    time: {
      label: "–ü–æ –≤—Ä–µ–º–µ–Ω–∏",
      icon: "‚è±Ô∏è",
      color: "purple.500",
    },
    words: {
      label: "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤",
      icon: "üî¢",
      color: "cyan.500",
    },
  };

  return (
    testTypes[testType || ""] || {
      label: testType || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ",
      icon: "‚ùì",
      color: "gray.500",
    }
  );
};
