import { describe, it, expect } from "vitest";
import {
  getModeDisplay,
  getLanguageDisplay,
  getTestTypeDisplay,
} from "./sessionDisplayUtils";

describe("sessionDisplayUtils", () => {
  describe("getModeDisplay", () => {
    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ 'words'", () => {
      const result = getModeDisplay("words");
      expect(result.label).toBe("–°–ª–æ–≤–∞");
      expect(result.icon).toBe("üìù");
      expect(result.color).toBe("blue.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ 'sentences'", () => {
      const result = getModeDisplay("sentences");
      expect(result.label).toBe("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è");
      expect(result.icon).toBe("üìú");
      expect(result.color).toBe("teal.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ 'time'", () => {
      const result = getModeDisplay("time");
      expect(result.label).toBe("–í—Ä–µ–º—è");
      expect(result.icon).toBe("‚è±Ô∏è");
      expect(result.color).toBe("green.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ 'quote'", () => {
      const result = getModeDisplay("quote");
      expect(result.label).toBe("–¶–∏—Ç–∞—Ç–∞");
      expect(result.icon).toBe("üí¨");
      expect(result.color).toBe("purple.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ 'zen'", () => {
      const result = getModeDisplay("zen");
      expect(result.label).toBe("–î–∑–µ–Ω");
      expect(result.icon).toBe("üßò");
      expect(result.color).toBe("orange.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞", () => {
      const result = getModeDisplay("unknown");
      expect(result.label).toBe("unknown");
      expect(result.icon).toBe("‚ùì");
      expect(result.color).toBe("gray.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è null", () => {
      const result = getModeDisplay(null);
      expect(result.label).toBe("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
      expect(result.icon).toBe("‚ùì");
      expect(result.color).toBe("gray.500");
    });
  });

  describe("getLanguageDisplay", () => {
    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–∞ 'ru'", () => {
      const result = getLanguageDisplay("ru");
      expect(result.label).toBe("–†—É—Å—Å–∫–∏–π");
      expect(result.flag).toBe("üá∑üá∫");
      expect(result.color).toBe("red.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–∞ 'en'", () => {
      const result = getLanguageDisplay("en");
      expect(result.label).toBe("English");
      expect(result.flag).toBe("üá∫üá∏");
      expect(result.color).toBe("blue.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–∞ 'de'", () => {
      const result = getLanguageDisplay("de");
      expect(result.label).toBe("Deutsch");
      expect(result.flag).toBe("üá©üá™");
      expect(result.color).toBe("yellow.600");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–∞ 'fr'", () => {
      const result = getLanguageDisplay("fr");
      expect(result.label).toBe("Fran√ßais");
      expect(result.flag).toBe("üá´üá∑");
      expect(result.color).toBe("blue.400");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–∞ 'es'", () => {
      const result = getLanguageDisplay("es");
      expect(result.label).toBe("Espa√±ol");
      expect(result.flag).toBe("üá™üá∏");
      expect(result.color).toBe("red.400");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —è–∑—ã–∫–∞ 'it'", () => {
      const result = getLanguageDisplay("it");
      expect(result.label).toBe("Italiano");
      expect(result.flag).toBe("üáÆüáπ");
      expect(result.color).toBe("green.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —è–∑—ã–∫–∞", () => {
      const result = getLanguageDisplay("unknown");
      expect(result.label).toBe("unknown");
      expect(result.flag).toBe("üåê");
      expect(result.color).toBe("gray.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è null", () => {
      const result = getLanguageDisplay(null);
      expect(result.label).toBe("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
      expect(result.flag).toBe("üåê");
      expect(result.color).toBe("gray.500");
    });
  });

  describe("getTestTypeDisplay", () => {
    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–∏–ø–∞ 'time'", () => {
      const result = getTestTypeDisplay("time");
      expect(result.label).toBe("–ü–æ –≤—Ä–µ–º–µ–Ω–∏");
      expect(result.icon).toBe("‚è±Ô∏è");
      expect(result.color).toBe("purple.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–∏–ø–∞ 'words'", () => {
      const result = getTestTypeDisplay("words");
      expect(result.label).toBe("–ü–æ —Å–ª–æ–≤–∞–º");
      expect(result.icon).toBe("üî¢");
      expect(result.color).toBe("cyan.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Ç–∏–ø–∞", () => {
      const result = getTestTypeDisplay("unknown");
      expect(result.label).toBe("unknown");
      expect(result.icon).toBe("‚ùì");
      expect(result.color).toBe("gray.500");
    });

    it("–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è null", () => {
      const result = getTestTypeDisplay(null);
      expect(result.label).toBe("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ");
      expect(result.icon).toBe("‚ùì");
      expect(result.color).toBe("gray.500");
    });
  });
});
