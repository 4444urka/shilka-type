services:
  postgres:
    image: postgres:latest
    container_name: shilka-db-prod
    environment:
      POSTGRES_USER: ${DB_USER:-shilka-type}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-shilka-db}
    volumes:
      - postgres_data:/var/lib/postgresql
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${DB_USER:-shilka-type} -d ${DB_NAME:-shilka-db}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shilka-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: shilka-backend-prod
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-shilka-type}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-shilka-db}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - shilka-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=/api
    container_name: shilka-frontend-prod
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - shilka-network

volumes:
  postgres_data:

networks:
  shilka-network:
    driver: bridge
